/*
3.1 WHERE句による絞り込み
行の絞り込みができる
・WHERE句NO基本
処理対象行の絞り込みに用いる=>WHEREを指定しないと
「全ての行」が処理対象になる
SELECT,UPDATE,DELETE文DE使用可能
=>INSERT文では使用できない
WHEREの後ろには条件式を記述する
=>絞り込み条件に沿った「正しい条件式」を記述する
正しい条件：行名 > 1000 ○
　　　　　　行名 + 1000 ×

3.2 条件式
結果が必ず真（true）か偽（false）になる式のこと
WHERE句に書けるものは結果が必ず
真（true）か偽（false）になるもの
真（true）になった行についてのみ、SELECTやUPDATE、DELETE
などの処理を行うのです

3.3 さまざまな比較演算子
=,<,>,<=,>=,<>
・NULLの判定
そのに何もデータが格納されていないことを「NULLGA格納されている」
と表現したものです
・NULLとは
そこに何も格納されていない、未定義であることを表す
数字のゼロや空白文字とも異なる
列の値がNULLであることを判定するためにはIS NULL演算子
NULLでないことを判定するためにはIS NOT NULL演算子を使います
・LIKE演算子
文字列があるパターンに合致しているかをチェックすることを
パターンマッチングという。
SQLではこのパターンマッチングにLIKE演算子を使う
式 LIKE パターン文字列
％ 任意の0文字以上の文字列
_ 任意の1文字
・BETWEEN演算子
ある範囲内に値が収まっているか判定する
・IN/NOT IN演算子
IN演算子
WHERE 品目 IN ('食費', '交通費')
NOT IN演算子
WHERE 品目 NOT IN ('食費', '交際費')
・ANY/ALL演算子
複数の値と大小を比較したい場合には、ANY演算子やALL演算子を利用
- IN演算子の場合
例：出金額が値リストの中の「どれか」と「一致」するなら真
- ANY演算子の場合
列：出金額が値リストの中の「どれか」より「小さい」なら真
- ALL演算子の場合
例：出金額が値リストの中の「すべて」より「小さい」なら真

3.4 複数の条件式を組み合わせる
・論理演算子
複数の条件式を組み合わせることができます
・AND演算子
2つの条件の両方が真の場合だけ、真となる（AかつB）
・OR演算子
2つの条件式NOどちらかが真ならば、真となる（AまたはB）
・NOT演算子
右辺の条件式の結果は、真は偽に偽は真に逆転する
複数の論理演算子GA使われている場合は1、NOT 2、AND 3、ORの
優先順位に従って処理されていく
条件式をカッコでくくると、評価の優先順位が引き上がる

3.5 主キーとその必要性
社員テーブルがあるとして、主キーを社員番号とする
・主キーとなる列が持つべき特性
必ず何らかNOデータが格納される（NULLではない）
他の行と値が重複しない

3.7 練習問題
SELECT * FROM 気象観測 WHERE 月 = 6;
SELECT * FROM 気象観測 WHERE 月 <> 6;
SELECT * FROM 気象観測 WHERE 降水量 < 100;
SELECT * FROM 気象観測 WHERE 降水量 > 200;
SELECT * FROM 気象観測 WHERE 最高気温 >= 30;
SELECT * FROM 気象観測 WHERE 最低気温 <= 0;
SELECT * FROM 気象観測 WHERE 月 IN (3, 5, 7);
SELECT * FROM 気象観測 WHERE 月 = 3 OR 月 = 5 OR 月 = 7;
SELECT * FROM 気象観測 WHERE 月 NOT IN (3, 5, 7);
SELECT * FROM 気象観測 WHERE 月 <> 3 AND 月 <> 5 AND 月 <> 7;
SELECT * FROM 気象観測 WHERE 降水量 <= 100 AND 湿度 < 50;
SELECT * FROM 気象観測 WHERE 降水量 <= 100 AND 湿度 < 50;
SELECT * FROM 気象観測 WHERE 最低気温 < 5 OR 最高気温 > 35;
SELECT * FROM 気象観測 WHERE 湿度 >= 60 AND 湿度 <= 79;

SELECT 都道府県名
FROM 都道府県
WHERE 都道府県名 LIKE '%川';

UPDATE 成績表 SET 外国語 = 81
WHERE 学籍番号 IN ('A002', 'E003');
*/