/*
7.1 検査結果に基づいて表を操作する
・SELECTをネストする

WHERE 出金額 = (SELECT MAX(出金額)FROM 家計簿)

一般的にあるものがその内側に別のものを内包している状態を
ネスト構造や入れ子と呼ぶ
他のSQL文の一部分として登場するSELECT文のことを、
副問い合わせや副照会、またはサブクエリと呼びます
・副問い合わせとは
他のSQL文の一部分として登場するSELECT文。丸括弧で括って
記述する
・副問い合わせを習得するコツ
一つひとつの副問い合わせを部品として捉えてみる
個々のSQL文を1つずつ作り、後から組み立てる

副問い合わせが処理される仕組みを理解しておく
副問い合わせの代表的な3つのパターンを学んでおく

・副問い合わせが処理される仕組み

SELECT 費目, 出金額, FROM 家計簿
WHERE 出金額 = (SELECT MAX(出金額)FROM 家計簿)
↓
SELECT 費目, 出金額, FROM 家計簿
WHERE 出金額 = (結果)
↓
処理終了

まず、内側にあるSELECT文が実行されて結果に化ける
そして、外側のSQLが実行される

・副問い合わせのパターン
単一の値に化ける副問い合わせ
列挙された複数値に化ける副問い合わせ
表形式の複数値に化ける副問い合わせ

単一の値の代わりとして、副問い合わせの検索結果を用いる
複数の値の代わりとして、副問い合わせの検索結果を用いる
表の値の代わりとして、副問い合わせの検索結果を用いる

7.2 単一の値の代わりに副問い合わせを用いる
・単一行副問い合わせ
単一の値を記述するような場所であれば、基本的にどこでも記述する
事ができます。

検索結果が1行1列の1つの値となる副問い合わせを指す
SELECT文の選択列リストやFROM句,UPDATEのSET句、また1つの値との
判定を行うWHERE句の条件式などに記述する事ができる

・SET句で利用する
SET句で副問い合わせを利用する

・選択列リストで利用する
選択リストで副問い合わせを利用する
最初から全体を読もうとしても複雑でよくわからない時は、カッコを探す

7.3 複数の値の代わりに副問い合わせと用いる
・複数行副問い合わせ
検索結果が複数の行からなる単一列（n行1列）の列となる
副問い合わせを指す。
SQL文中で「複数の値を列挙」するような場所に、その代わりとして
記述する事ができる。

検索結果がn行1列の複数の値となる副問い合わせ（nは1以上）
複数の値との判定を行うWHERE句の条件式や、SELECT文のFROM句に記述する
事ができる

・IN演算子で利用する

・ANY/ALL演算子で利用する
ANY演算子は、左辺の値と右辺に列挙された値とを比較して、いずれかの値と
併記した比較演算子が成立するかを判定するもの

・エラーとなる副問い合わせ
「SELECT * FROM 家計簿 WHERE 出金額 < 30000」というSQL文の「30000」の部分に、
複数行副問い合わせを記述するとエラーになります。
副問い合わせの結果得られる複数の値のうち、どれと出金額を比較して良いかわからないからです

複数行副問い合わせは複数の値に化けるので、単なる符号や不等号では比較できない。
等号や不等号にANY/ALL演算子を組み合わせることで、複数の値との比較を行う

NOT IN演算子は、右辺に列挙された値のどれとも一致しない場合に真となる
<>ALLも、右辺の全ての値を対象に一致しないことを判定するため、同じく真となる

・同じ意味になる演算子
NOT INと<>ALLは全ての値と一致しないことを判定する演算子
INと=ALLはいずれかの値と一致する事を判定する演算子

・副問い合わせとNULL
NOT IN または <>ALLで判定する副問い合わせの結果にNULLが含まれると、
全体の結果もNULLとなる

・副問い合わせの結果から確実にNULLを除外する方法
副問い合わせの絞り込み条件に、IS NOT NULL 条件を含める
COALESCE関数を使ってNULLを別の値に置き換える

*/

